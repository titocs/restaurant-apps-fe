{"version":3,"file":"app~e4317507.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/checkStatusFetch.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-initiator.js","webpack://restaurant-apps/./src/scripts/utils/post-review.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import FirstPage from '../views/pages/first-page';\nimport Detail from '../views/pages/detail';\nimport RestoFavorit from '../views/pages/resto-favorit';\n\nconst routes = {\n  '/': FirstPage,\n  '/resto-favorit': RestoFavorit,\n  '/detail/:id': Detail,\n};\n\nexport default routes;\n","/* eslint-disable no-underscore-dangle */\nconst UrlParser = {\n  parseActiveUrlWithCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    const splitedUrl = this._urlSplitter(url);\n    return this._urlCombiner(splitedUrl);\n  },\n\n  parseActiveUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this._urlSplitter(url);\n  },\n\n  _urlSplitter(url) {\n    const urlsSplits = url.split('/');\n    return {\n      resource: urlsSplits[1] || null,\n      id: urlsSplits[2] || null,\n      verb: urlsSplits[3] || null,\n    };\n  },\n\n  _urlCombiner(splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\n    + (splitedUrl.id ? '/:id' : '')\n    + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\n  },\n};\n\nexport default UrlParser;\n","const checkStatusFetchRequest = ({ response, errorMessage }) => {\n  if (!(response.status >= 200 && response.status <= 300)) {\n    throw new Error(errorMessage);\n  }\n};\n\nexport default checkStatusFetchRequest;\n","/* eslint-disable no-underscore-dangle */\nconst DrawerInitiator = {\n  init({\n    button, closeButton, drawer, content,\n  }) {\n    button.addEventListener('click', (event) => {\n      this._toggleDrawer(event, drawer);\n    });\n\n    closeButton.addEventListener('click', (event) => {\n      this._closeDrawer(event, drawer);\n    });\n\n    content.addEventListener('click', (event) => {\n      this._closeDrawer(event, drawer);\n    });\n  },\n\n  _toggleDrawer(event, drawer) {\n    event.stopPropagation();\n    drawer.classList.toggle('open');\n  },\n\n  _closeDrawer(event, drawer) {\n    event.stopPropagation();\n    drawer.classList.remove('open');\n  },\n};\n\nexport default DrawerInitiator;\n","/* eslint-disable no-underscore-dangle */\nimport FavoriteRestoIdb from '../data/favorit-resto-idb';\nimport { createLikeButtonTemplate, createLikedButtonTemplate } from '../views/templates/template-creator';\n\nconst LikeButtonInitiator = {\n  async init({ likeButtonContainer, favoriteRestos, resto }) {\n    this._likeButtonContainer = likeButtonContainer;\n    this._resto = resto;\n    this._favoriteRestos = favoriteRestos;\n\n    await this._renderButton();\n  },\n\n  async _renderButton() {\n    const { id } = this._resto;\n\n    if (await this._isRestoExist(id)) {\n      this._renderLiked();\n    } else {\n      this._renderLike();\n    }\n  },\n\n  async _isRestoExist(id) {\n    const resto = await FavoriteRestoIdb.getResto(id);\n    return !!resto;\n  },\n\n  _renderLike() {\n    this._likeButtonContainer.innerHTML = createLikeButtonTemplate();\n\n    const likeButton = document.querySelector('#likeButton');\n    likeButton.addEventListener('click', async () => {\n      await FavoriteRestoIdb.putResto(this._resto);\n      this._renderButton();\n    });\n  },\n\n  _renderLiked() {\n    this._likeButtonContainer.innerHTML = createLikedButtonTemplate();\n\n    const likeButton = document.querySelector('#likedButton');\n    likeButton.addEventListener('click', async () => {\n      await FavoriteRestoIdb.deleteResto(this._resto.id);\n      this._renderButton();\n    });\n  },\n};\n\nexport default LikeButtonInitiator;\n","/* eslint-disable no-alert */\n/* eslint-disable no-tabs */\nimport restoDbSource from '../data/restodb-source';\nimport cardReview from '../views/components/card-review';\n\nconst postReview = async ({ url, name, review }) => {\n  const userInputData = {\n    id: url,\n    name,\n    review,\n  };\n\n  try {\n    const reviewWrapper = document.querySelector('.review-wrapper');\n    const data = await restoDbSource.postReviewRestaurant(userInputData);\n    reviewWrapper.innerHTML = data.customerReviews.map((reviewData) => cardReview(reviewData)).join('');\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport default postReview;\n","/* eslint-disable no-console */\nimport * as WorkboxWindow from 'workbox-window';\n\nconst swRegister = async () => {\n  if (!('serviceWorker' in navigator)) {\n    console.log('Service Worker not supported in the browser');\n    return;\n  }\n\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js');\n\n  try {\n    await wb.register();\n    console.log('Service worker registered');\n  } catch (error) {\n    console.log('Failed to register service worker', error);\n  }\n};\n\nexport default swRegister;\n"],"names":["FirstPage","RestoFavorit","Detail","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","response","errorMessage","status","Error","init","button","closeButton","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","i","likeButtonContainer","favoriteRestos","resto","_likeButtonContainer","_resto","_favoriteRestos","_renderButton","_isRestoExist","_renderLiked","_renderLike","FavoriteRestoIdb","innerHTML","createLikeButtonTemplate","document","querySelector","createLikedButtonTemplate","name","review","userInputData","reviewWrapper","restoDbSource","data","customerReviews","map","reviewData","cardReview","join","alert","message","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}